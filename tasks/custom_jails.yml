---
# =============================================================================
# Ansible Role: Fail2ban - Custom Jail Files
# =============================================================================
# This file contains tasks for creating custom jail configuration files.
# It creates individual jail files in the /etc/fail2ban/jail.d/ directory
# based on the configuration defined in the fail2ban_custom_jail_files variable
# following Ansible best practices.
#
# Flow:
#   1. Jail Directory Setup
#   2. Custom Jail File Creation
#   3. Cleanup Orphaned Files
#   4. Configuration Summary
# =============================================================================

# -----------------------------------------------------------------------------
# 1. Jail Directory Setup
# -----------------------------------------------------------------------------
- name: "📁 Fail2ban | jails | Ensure jail.d directory exists"
  become: true
  ansible.builtin.file:
    path: "{{ fail2ban_dir_config_path }}/jail.d"
    state: directory
    mode: "0755"
    owner: root
    group: root

# -----------------------------------------------------------------------------
# 2. Custom Jail File Creation
# -----------------------------------------------------------------------------
- name: "🔧 Fail2ban | jails | Create custom jail configuration files"
  become: true
  ansible.builtin.copy:
    content: "{{ item.content }}"
    dest: "{{ fail2ban_dir_config_path }}/jail.d/{{ item.name }}.conf"
    mode: "0644"
    owner: root
    group: root
    backup: true
  loop: "{{ fail2ban_custom_jail_files }}"
  when: >
    fail2ban_custom_jail_files is defined and
    fail2ban_custom_jail_files | length > 0
  notify: "🔄 Fail2ban | handlers | Restart fail2ban service"

# -----------------------------------------------------------------------------
# 3. Cleanup Orphaned Files
# -----------------------------------------------------------------------------
- name: "🔍 Fail2ban | jails | Identify existing custom jail files"
  become: true
  ansible.builtin.find:
    paths: "{{ fail2ban_dir_config_path }}/jail.d"
    patterns: "*.conf"
    excludes: "defaults-*.conf,00-*.conf"
  register: _existing_jail_files
  when: >
    fail2ban_custom_jail_files is defined and
    fail2ban_custom_jail_files | length > 0

- name: "🔍 Fail2ban | jails | Create list of expected jail files"
  ansible.builtin.set_fact:
    _expected_jail_files: "{{ fail2ban_custom_jail_files | map(attribute='name') | map('regex_replace', '^(.*)$', fail2ban_dir_config_path + '/jail.d/\\1.conf') | list }}"
  when: >
    fail2ban_custom_jail_files is defined and
    fail2ban_custom_jail_files | length > 0

- name: "🗑️ Fail2ban | jails | Remove orphaned custom jail files"
  become: true
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ _existing_jail_files.files }}"
  when: >
    fail2ban_custom_jail_files is defined and
    fail2ban_custom_jail_files | length > 0 and
    _existing_jail_files is defined and
    item.path not in _expected_jail_files
  notify: "🔄 Fail2ban | handlers | Restart fail2ban service"

# -----------------------------------------------------------------------------
# 4. Configuration Summary
# -----------------------------------------------------------------------------
- name: "📊 Fail2ban | jails | Report custom jails configuration status"
  ansible.builtin.debug:
    msg:
      - "✅ Fail2ban Custom Jails Configuration Completed Successfully:"
      - "   Custom Jails Count: {{ fail2ban_custom_jail_files | length if fail2ban_custom_jail_files is defined else 0 }}"
      - "   Jail Directory: {{ fail2ban_dir_config_path }}/jail.d"
      - "   Jail Files: {{ fail2ban_custom_jail_files | map(attribute='name') | list if fail2ban_custom_jail_files is defined and fail2ban_custom_jail_files | length > 0 else 'None configured' }}"
      - "   Cleanup Performed: {{ 'Yes' if (_existing_jail_files is defined and _existing_jail_files.files | length > 0) else 'No orphaned files found' }}"
