---
# =============================================================================
# Ansible Role: Fail2ban - Service Configuration
# =============================================================================
# This file contains tasks for configuring the Fail2ban service.
# It handles service state, configuration file deployment, and custom
# configuration files management.
#
# Flow:
#   1. Service State Management
#   2. Configuration File Deployment
#   3. Custom Configuration Files Deployment
#   4. Systemd Service Management
# =============================================================================

# -----------------------------------------------------------------------------
# 1. Service State Management
# -----------------------------------------------------------------------------
- name: Fail2ban | service | Enable Fail2ban service on system startup
  become: true
  ansible.builtin.service:
    name: "{{ fail2ban_service_name }}"
    enabled: true
  notify: Fail2ban | handlers | Restart fail2ban service
  when: >
    fail2ban_service_enabled | bool

- name: Fail2ban | service | Disable Fail2ban service on system startup
  become: true
  ansible.builtin.service:
    name: "{{ fail2ban_service_name }}"
    enabled: false
  notify: Fail2ban | handlers | Restart fail2ban service
  when: >
    not fail2ban_service_enabled | bool

# -----------------------------------------------------------------------------
# 2. Configuration File Deployment
# -----------------------------------------------------------------------------
- name: Fail2ban | file | Remove default jail.d file for Debian
  become: true
  ansible.builtin.file:
    path: "{{ fail2ban_dir_config_path }}/jail.d/defaults-debian.conf"
    state: absent
  notify: Fail2ban | handlers | Restart fail2ban service
  when: >
    ansible_os_family | lower == "debian"

- name: Fail2ban | file | Remove default jail.d file for RedHat
  become: true
  ansible.builtin.file:
    path: "{{ fail2ban_dir_config_path }}/jail.d/00-firewalld.conf"
    state: absent
  notify: Fail2ban | handlers | Restart fail2ban service
  when: >
    ansible_os_family | lower == "redhat"

- name: Fail2ban | template | Deploy Fail2ban main configuration file
  become: true
  ansible.builtin.template:
    src: "fail2ban/fail2ban.local.j2"
    dest: "{{ fail2ban_dir_config_path }}/fail2ban.local"
    mode: "0644"
    owner: root
    group: root
  notify: Fail2ban | handlers | Restart fail2ban service

- name: Fail2ban | template | Deploy Fail2ban jail configuration file
  become: true
  ansible.builtin.template:
    src: "fail2ban/jail.local.j2"
    dest: "{{ fail2ban_dir_config_path }}/jail.local"
    mode: "0644"
    owner: root
    group: root
  notify: Fail2ban | handlers | Restart fail2ban service

# -----------------------------------------------------------------------------
# 3. Custom Configuration Files Deployment
# -----------------------------------------------------------------------------
- name: Fail2ban | copy | Deploy custom jail files
  become: true
  ansible.builtin.copy:
    src: "{{ fail2ban_custom_jails_path }}/"
    dest: "{{ fail2ban_dir_config_path }}/jail.d/"
    owner: root
    group: root
    mode: "0644"
  notify: Fail2ban | handlers | Restart fail2ban service
  when: >
    fail2ban_custom_jails_path is defined

- name: Fail2ban | copy | Deploy custom action files
  become: true
  ansible.builtin.copy:
    src: "{{ fail2ban_custom_actions_path }}/"
    dest: "{{ fail2ban_dir_config_path }}/action.d/"
    owner: root
    group: root
    mode: "0644"
  notify: Fail2ban | handlers | Restart fail2ban service
  when: >
    fail2ban_custom_actions_path is defined

- name: Fail2ban | copy | Deploy custom filter files
  become: true
  ansible.builtin.copy:
    src: "{{ fail2ban_custom_filters_path }}/"
    dest: "{{ fail2ban_dir_config_path }}/filter.d/"
    owner: root
    group: root
    mode: "0644"
  notify: Fail2ban | handlers | Restart fail2ban service
  when: >
    fail2ban_custom_filters_path is defined

# -----------------------------------------------------------------------------
# 4. Systemd Service Management
# -----------------------------------------------------------------------------
- name: Fail2ban | file | Create systemd service directory
  become: true
  ansible.builtin.file:
    path: "/etc/systemd/system/fail2ban.service.d"
    state: directory
    mode: "0754"
  when: >
    fail2ban_role_mode == "nftables"

- name: Fail2ban | template | Deploy systemd override configuration
  become: true
  ansible.builtin.template:
    src: "systemd/override.conf.j2"
    dest: "/etc/systemd/system/fail2ban.service.d/override.conf"
    mode: "0644"
    owner: root
    group: root
  register: _systemd_file_
  when: >
    fail2ban_role_mode == "nftables"

- name: Fail2ban | systemd_service | Reload systemd daemon
  become: true
  ansible.builtin.systemd_service:
    daemon_reload: true
  when: >
    _systemd_file_.changed
