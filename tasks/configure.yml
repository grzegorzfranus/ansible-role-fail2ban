---
# =============================================================================
# Ansible Role: Fail2ban - Service Configuration
# =============================================================================
# This file contains tasks for configuring the Fail2ban service.
# It handles service state, configuration file deployment, custom
# configuration files management, and systemd service overrides.
#
# Flow:
#   1. Service State Management
#   2. Configuration File Deployment
#   3. Custom Configuration Files Deployment
#   4. Systemd Service Management
# =============================================================================

# -----------------------------------------------------------------------------
# 1. Service State Management
# -----------------------------------------------------------------------------
- name: "🔧 Fail2ban | configure | Configure service enablement"
  become: true
  ansible.builtin.service:
    name: "{{ fail2ban_service_name }}"
    enabled: "{{ fail2ban_service_enabled | bool }}"

# -----------------------------------------------------------------------------
# 2. Configuration File Deployment
# -----------------------------------------------------------------------------
- name: "🗑️ Fail2ban | configure | Remove default jail.d file for Debian"
  become: true
  ansible.builtin.file:
    path: "{{ fail2ban_dir_config_path }}/jail.d/defaults-debian.conf"
    state: absent
  notify: "🔄 Fail2ban | handlers | Restart fail2ban service"
  when: >
    ansible_os_family | lower == "debian"

- name: "🗑️ Fail2ban | configure | Remove default jail.d file for RedHat"
  become: true
  ansible.builtin.file:
    path: "{{ fail2ban_dir_config_path }}/jail.d/00-firewalld.conf"
    state: absent
  notify: "🔄 Fail2ban | handlers | Restart fail2ban service"
  when: >
    ansible_os_family | lower == "redhat"

- name: "🔧 Fail2ban | configure | Deploy Fail2ban main configuration file"
  become: true
  ansible.builtin.template:
    src: "fail2ban/fail2ban.local.j2"
    dest: "{{ fail2ban_dir_config_path }}/fail2ban.local"
    mode: "0644"
    owner: root
    group: root
    backup: true
  notify: "🔄 Fail2ban | handlers | Restart fail2ban service"

- name: "🔧 Fail2ban | configure | Deploy Fail2ban jail configuration file"
  become: true
  ansible.builtin.template:
    src: "fail2ban/jail.local.j2"
    dest: "{{ fail2ban_dir_config_path }}/jail.local"
    mode: "0644"
    owner: root
    group: root
    backup: true
  notify: "🔄 Fail2ban | handlers | Restart fail2ban service"

- name: "🔎 Fail2ban | configure | Validate configuration syntax"
  ansible.builtin.command: "fail2ban-client -t"
  changed_when: false
  register: _fail2ban_configtest_
  failed_when: _fail2ban_configtest_.rc != 0
  when: fail2ban_service_enabled | bool

# -----------------------------------------------------------------------------
# 3. Custom Configuration Files Deployment
# -----------------------------------------------------------------------------
- name: "🔍 Fail2ban | configure | Check if custom jails path exists (controller)"
  delegate_to: localhost
  become: false
  ansible.builtin.stat:
    path: "{{ fail2ban_custom_jails_path }}"
  register: _custom_jails_path_stat_
  when: >
    fail2ban_custom_jails_path is defined

- name: "📁 Fail2ban | configure | Deploy custom jail files"
  become: true
  ansible.builtin.copy:
    src: "{{ fail2ban_custom_jails_path }}/"
    dest: "{{ fail2ban_dir_config_path }}/jail.d/"
    owner: root
    group: root
    mode: "0644"
    backup: true
  notify: "🔄 Fail2ban | handlers | Restart fail2ban service"
  when: >
    fail2ban_custom_jails_path is defined and
    _custom_jails_path_stat_.stat.exists

- name: "🔍 Fail2ban | configure | Check if custom actions path exists (controller)"
  delegate_to: localhost
  become: false
  ansible.builtin.stat:
    path: "{{ fail2ban_custom_actions_path }}"
  register: _custom_actions_path_stat_
  when: >
    fail2ban_custom_actions_path is defined

- name: "📁 Fail2ban | configure | Deploy custom action files"
  become: true
  ansible.builtin.copy:
    src: "{{ fail2ban_custom_actions_path }}/"
    dest: "{{ fail2ban_dir_config_path }}/action.d/"
    owner: root
    group: root
    mode: "0644"
    backup: true
  notify: "🔄 Fail2ban | handlers | Restart fail2ban service"
  when: >
    fail2ban_custom_actions_path is defined and
    _custom_actions_path_stat_.stat.exists

- name: "🔍 Fail2ban | configure | Check if custom filters path exists (controller)"
  delegate_to: localhost
  become: false
  ansible.builtin.stat:
    path: "{{ fail2ban_custom_filters_path }}"
  register: _custom_filters_path_stat_
  when: >
    fail2ban_custom_filters_path is defined

- name: "📁 Fail2ban | configure | Deploy custom filter files"
  become: true
  ansible.builtin.copy:
    src: "{{ fail2ban_custom_filters_path }}/"
    dest: "{{ fail2ban_dir_config_path }}/filter.d/"
    owner: root
    group: root
    mode: "0644"
    backup: true
  notify: "🔄 Fail2ban | handlers | Restart fail2ban service"
  when: >
    fail2ban_custom_filters_path is defined and
    _custom_filters_path_stat_.stat.exists

# -----------------------------------------------------------------------------
# 4. Systemd Service Management
# -----------------------------------------------------------------------------
- name: "📁 Fail2ban | configure | Create systemd service directory"
  become: true
  ansible.builtin.file:
    path: "/etc/systemd/system/fail2ban.service.d"
    state: directory
    mode: "0755"
    owner: root
    group: root
  when: >
    fail2ban_role_mode == "nftables"

- name: "🔧 Fail2ban | configure | Deploy systemd override configuration"
  become: true
  ansible.builtin.template:
    src: "systemd/override.conf.j2"
    dest: "/etc/systemd/system/fail2ban.service.d/override.conf"
    mode: "0644"
    owner: root
    group: root
    backup: true
  when: >
    fail2ban_role_mode == "nftables"
  notify: "🔄 Fail2ban | handlers | Reload systemd daemon"

# -----------------------------------------------------------------------------
# 5. Configuration Summary
# -----------------------------------------------------------------------------
- name: "📊 Fail2ban | configure | Report configuration status"
  ansible.builtin.debug:
    msg:
      - "✅ Fail2ban Configuration Completed Successfully:"
      - "   Service Enabled: {{ fail2ban_service_enabled }}"
      - "   Configuration Path: {{ fail2ban_dir_config_path }}"
      - "   Role Mode: {{ fail2ban_role_mode | default('default') }}"
      - "   Custom Jails: {{ 'Yes' if (fail2ban_custom_jails_path is defined and _custom_jails_path_stat_.stat.exists) else 'No' }}"
      - "   Custom Actions: {{ 'Yes' if (fail2ban_custom_actions_path is defined and _custom_actions_path_stat_.stat.exists) else 'No' }}"
      - "   Custom Filters: {{ 'Yes' if (fail2ban_custom_filters_path is defined and _custom_filters_path_stat_.stat.exists) else 'No' }}"
